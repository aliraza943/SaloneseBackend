const mongoose = require('mongoose');

const BillSchema = new mongoose.Schema({
    appointments: [
        {
            _id: { type: mongoose.Schema.Types.Mixed },  // can be ObjectId or string (auto_)
            staffId: { type: mongoose.Schema.Types.Mixed },
            clientId: { type: mongoose.Schema.Types.Mixed },
            businessId: { type: mongoose.Schema.Types.Mixed },
            title: { type: String },
            serviceType: { type: String },
            serviceId: { type: mongoose.Schema.Types.Mixed },
            serviceName: { type: String },
            clientName: { type: String },
            description: { type: String },
            serviceCharges: { type: Number },
            start: { type: Date },
            end: { type: Date },
            taxesApplied: { type: Array },
            totalTax: { type: Number },
            totalBill: { type: Number },
            note: { type: String },
            quantity: { type: Number },
            staffName: { type: String },
            autoGenerated: { type: Boolean, default: false }
        }
    ],
    products: [
        {
            name: { type: String, required: true },
            price: { type: Number, required: true },
            quantity: { type: Number, required: true },
            description: { type: String },
            clientName:{ type: String}

        }
    ],
    totalAmount: { type: Number, required: true },
    status: { type: String, enum: ['unpaid', 'paid'], default: 'unpaid' },
    createdAt: { type: Date, default: Date.now },

    clientId: { type: mongoose.Schema.Types.ObjectId, ref: 'Clientelle' },
    businessId: { type: mongoose.Schema.Types.ObjectId, ref: 'Business' },

    notes: { type: String },
    paymentMethod: { type: String },
    businessId: { type: mongoose.Schema.Types.ObjectId, ref: 'Business' }

});

module.exports = mongoose.model('BillComplete', BillSchema);
